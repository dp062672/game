import pygame
import random
import os

pygame.init()
pygame.mixer.init()

WIDTH = 360
HEIGHT = 480
FPS = 30
GROUND = HEIGHT - 60
SLOW = 3
FAST = 8

PLAYER_ACC = 0.9
PLAYER_FRICTION = -0.12
PLAYER_GRAV = 0.9
vec = pygame.math.Vector2

WHITE = (255,255,255)
BLACK = (0,0,0)
RED = (255,0,0)
GREEN = (0,255,0)
BLUE = (0,0,255)

game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "img")
snd_folder = os.path.join(game_folder, "snd")

pygame.mixer.music.load(os.path.join(snd_folder, "tottfiy.mp3"))
pygame.mixer.music.set_volume(0.4)

font_name = pygame.font.match_font('arial')
def draw_text(surf, text, size,x, y):
    font = pygame.font.Font(font_name, size)
    text_surface = font.render(text,True, GREEN)
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)

def show_start_screen():
    #screen.blit(background,background_rect)
    screen.fill(RED)
    draw_text(screen, "poggersman", 64, WIDTH/2, HEIGHT/4)
    draw_text(screen, "Arrow keys move, Space bar to fire!", 22, WIDTH/2, HEIGHT/2)
    draw_text(screen, "Press any key to start...", 18, WIDTH/2, HEIGHT*3/4)
    pygame.display.flip()
    waiting = True
    while waiting:
        clock.tick(FPS)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
            if event.type == pygame.KEYUP:
                waiting = False

class Player(pygame.sprite.Sprite):
    
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "boatman.png")).convert()
        self.image.set_colorkey(BLACK)
        self.rect = self.image.get_rect()
        self.radius = 20

        self.rect.centerx = WIDTH/2
        self.rect.bottom = HEIGHT - 10
        self.speedx = 0
        self.shield = 100
        self.shoot_delay = 250
        self.last_shot = pygame.time.get_ticks()

        self.pos = vec(10, GROUND - 60)
        self.vel = vec(0, 0)
        self.acc = vec(0, 0)

    def update(self):
        
        self.acc = vec(0, PLAYER_GRAV)
    
        keystate = pygame.key.get_pressed()

        if keystate[pygame.K_RIGHT]:
                self.acc.x += PLAYER_ACC
        if keystate[pygame.K_LEFT]:
                self.acc.x += -PLAYER_ACC
        if keystate[pygame.K_SPACE]:
            self.shoot()
        '''
        if keystate[pygame.K_UP]:
                self.rect.y += -5
        if keystate[pygame.K_DOWN]:
                self.rect.y += 5
        '''
        if self.vel.y == 0 and keystate[pygame.K_UP]:
                self.vel.y = -20

        self.acc.x += self.vel.x * PLAYER_FRICTION
        
        self.vel += self.acc
        self.pos += self.vel + 0.5 * self.acc

        if self.pos.x > WIDTH:
                self.pos.x = 0
        if self.pos.x < 0:
                self.pos.x = WIDTH

        if self.pos.y > GROUND:
                self.pos.y = GROUND + 1
                self.vel.y = 0

        self.rect.midbottom = self.pos

    def shoot(self):
        now = pygame.time.get_ticks()
        if now - self.last_shot > self.shoot_delay:
            self.last_shot = now
            bullet = Bullet(self.rect.right, self.rect.centery)
            all_sprites.add(bullet)
            bullets.add(bullet)

class Bullet(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((12, 12))
        self.image.fill(BLACK)
        self.image.set_colorkey(WHITE)

        self.rect = self.image.get_rect()
        self.rect.bottom = y
        self.rect.centerx = x
        self.speedx = 3

    def update(self):
        self.rect.x += self.speedx
        if self.rect.bottom < 0:
            self.kill()
		
class Platform(pygame.sprite.Sprite):
    
        def __init__(self):
            pygame.sprite.Sprite.__init__(self)
            self.image = pygame.Surface((100, 25))
            self.image.fill(BLACK)
            self.rect = self.image.get_rect()
            self.rect.x = 10
            self.rect.y = HEIGHT - 160


                
pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("poggersman")

clock = pygame.time.Clock()
pygame.mixer.music.play(loops = -1)

all_sprites = pygame.sprite.Group()
player = Player()
all_sprites.add(player)

bullets = pygame.sprite.Group()

class Romero(pygame.sprite.Sprite):
    
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "guideromero.png")).convert()
        self.image.set_colorkey(BLACK)
        self.rect = self.image.get_rect()
        self.pos = vec(200, GROUND-60)
        self.rect.midbottom = self.pos
        
        
    
platform = Platform()
all_sprites.add(platform)
romero = Romero()
all_sprites.add(romero)
start=True
running = True
while running:
    if start:
        show_start_screen()
        start = False

    clock.tick(FPS)

    #process events
    for event in pygame.event.get():
            if event.type == pygame. QUIT:
                    running = False

    #update
    all_sprites.update()

    #DRAW
    screen.fill(RED)
    all_sprites.draw(screen)

    #flip
    pygame.display.flip()

pygame.quit()
